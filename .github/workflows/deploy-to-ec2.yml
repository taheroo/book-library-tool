name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get Public IP of the Runner
        id: ip
        run: echo "::set-output name=runner_ip::$(curl http://checkip.amazonaws.com)"

      - name: Update AWS Security Group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.runner_ip }}/32

      - name: Setup SSH and Update Known Hosts
        run: |
          set -x
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts
        shell: /usr/bin/bash -e {0}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST_IP: ${{ secrets.EC2_IP }}

      - name: Sync changes to EC2
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" --exclude=node_modules --exclude=.git ./ ${{ secrets.EC2_IP_ADDRESS }}:~/book-library-tool
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_IP_ADDRESS }} "cd ~/book-library-tool && npm install && sudo systemctl restart myapp.service"

      - name: Clean up IP Whitelist
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.runner_ip }}/32
